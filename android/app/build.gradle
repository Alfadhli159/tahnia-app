plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
   id 'com.google.gms.google-services' // ✅ مطلوب لـ Firebase

}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.tahania_app"
    compileSdkVersion 35

    // Release signing configuration
    signingConfigs {
        release {
            /*
            IMPORTANT: Before publishing to Play Store, you MUST configure your release signing key.
            
            Steps to create and configure release keystore:
            1. Generate a keystore file using the following command:
               keytool -genkey -v -keystore release.keystore -keyalg RSA -keysize 2048 -validity 10000 -alias release
            
            2. Move the keystore file to a secure location (e.g., android/app/keystore/release.keystore)
            
            3. Add the following to android/local.properties (DO NOT commit this file to version control):
               storeFile=keystore/release.keystore
               storePassword=your_keystore_password
               keyAlias=release
               keyPassword=your_key_password
            
            4. Uncomment and update the following lines with your keystore details:
            */
            
            // storeFile file("keystore/release.keystore")
            // storePassword localProperties.getProperty('storePassword')
            // keyAlias localProperties.getProperty('keyAlias')
            // keyPassword localProperties.getProperty('keyPassword')
            
            /*
            Security Best Practices:
            - Keep your keystore file in a secure location
            - Use strong passwords
            - Never commit keystore or passwords to version control
            - Back up your keystore file securely - losing it means you cannot update your app!
            
            For more information, see:
            https://developer.android.com/studio/publish/app-signing
            */
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.tahania_app"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            // Enable the following for release builds
            // minifyEnabled true
            // shrinkResources true
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
} 